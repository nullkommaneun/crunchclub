<!doctype html>
<html lang="de" class="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CrunchClub ‚Äì Registrierung</title>
    <meta name="color-scheme" content="light dark">
    <meta http-equiv="Cache-Control" content="no-store" />
    <!-- Tailwind CSS via CDN for modern utility-first styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Google Fonts for a modern look -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">

    <style>
        /* Custom styles that are difficult with utility classes alone */
        body {
            font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, sans-serif;
            background-color: #0b0f1a; /* Dark, rich background */
        }

        /* The glowing border effect from your original design */
        .glow-effect {
            position: absolute;
            inset: -2px;
            border-radius: inherit;
            pointer-events: none;
            background:
                radial-gradient(40% 60% at 10% 10%, rgba(6, 182, 212, .25), transparent 60%),
                radial-gradient(50% 70% at 90% 20%, rgba(168, 85, 247, .25), transparent 70%);
            filter: blur(30px);
            opacity: .7;
            z-index: -1;
        }

        /* Checkmark animation */
        .check-pop {
            animation: pop 0.6s cubic-bezier(0.18, 0.89, 0.32, 1.28) both;
        }

        @keyframes pop {
            0% {
                transform: scale(.6);
                opacity: .6;
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }
        
        /* Custom scrollbar for menu strip */
        .menu-strip::-webkit-scrollbar {
            height: 6px;
        }
        .menu-strip::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }
        .menu-strip::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
        }
    </style>
</head>
<body class="text-gray-200 antialiased">

    <!-- Main container -->
    <div class="max-w-4xl mx-auto p-4 md:p-6 lg:p-8">

        <!-- Hero Section -->
        <header class="relative rounded-2xl p-5 border border-white/10 overflow-hidden" style="background:linear-gradient(135deg, rgba(168,85,247,.06), rgba(6,182,212,.06));">
            <div class="glow-effect"></div>
            <div class="flex items-center gap-4">
                <div class="flex-shrink-0 w-14 h-14 rounded-xl border border-white/20 bg-slate-800/50 flex items-center justify-center overflow-hidden">
                    <!-- Ersetze dies durch dein Logo -->
                    <img src="https://placehold.co/100x100/0b0f1a/67e8f9?text=CC" alt="CrunchClub Logo" class="w-full h-full object-cover">
                </div>
                <div>
                    <h1 class="text-2xl md:text-3xl font-bold tracking-tight text-white">CrunchClub Registrierung</h1>
                    <p class="text-gray-400">Ramen ‚Ä¢ Burritos ‚Ä¢ Tacos ‚Ä¢ Fries ‚Äì Zwickau</p>
                </div>
            </div>

            <!-- Status Card -->
            <div class="mt-5 bg-black/20 border border-white/10 rounded-2xl p-5 shadow-2xl backdrop-blur-lg">
                <div id="badge" class="inline-flex items-center gap-3 py-2 px-4 rounded-full border font-bold transition-all duration-300">
                    <div id="badgeIcon" class="w-5 h-5 flex items-center justify-center">
                        <!-- Icon will be inserted by JS -->
                    </div>
                    <span id="badgeText">Status wird gepr√ºft ‚Ä¶</span>
                </div>

                <div class="mt-5 grid grid-cols-1 lg:grid-cols-2 gap-x-8 gap-y-6">
                    <!-- Left Column: Status Details & Actions -->
                    <div>
                        <div class="grid grid-cols-[100px_1fr] gap-x-4 gap-y-2 text-sm">
                            <div class="text-gray-400">Status</div><div id="kv_status" class="font-semibold">‚Äì</div>
                            <div class="text-gray-400">Standort</div><div id="kv_venue" class="font-semibold">‚Äì</div>
                            <div class="text-gray-400">Zeit</div><div id="kv_time" class="font-semibold">‚Äì</div>
                            <div class="text-gray-400">Client-ID</div><div id="kv_cid" class="font-mono text-xs truncate">‚Äì</div>
                        </div>
                        <hr class="border-white/10 my-4">
                        <div id="tips" class="text-gray-300 text-sm space-y-2"></div>
                        
                        <div class="mt-5 flex flex-wrap gap-3">
                            <button id="retry" class="px-4 py-2 rounded-lg font-bold text-slate-900 bg-gradient-to-r from-cyan-400 to-purple-500 hover:opacity-90 transition-opacity shadow-lg shadow-cyan-500/20">Erneut scannen</button>
                            <button id="reset" class="px-4 py-2 rounded-lg font-bold bg-white/5 border border-white/10 hover:bg-white/10 transition-colors">Client-ID zur√ºcksetzen</button>
                            <a id="menuBtn" href="#menu" class="px-4 py-2 rounded-lg font-bold bg-white/5 border border-white/10 hover:bg-white/10 transition-colors">Zur Speisekarte</a>
                        </div>
                    </div>

                    <!-- Right Column: Menu Teaser -->
                    <div>
                        <h3 class="font-bold text-white mb-3">Heute beliebt</h3>
                        <div class="menu-strip flex gap-3 overflow-x-auto pb-2 -mb-2 snap-x snap-mandatory">
                            <!-- Ersetze Bilder/Texte durch echte Items -->
                            <article class="flex-shrink-0 w-56 snap-start bg-slate-800/60 rounded-xl border border-white/10 overflow-hidden">
                                <img src="https://placehold.co/400x300/1a202c/ffffff?text=Ramen" alt="Tonkotsu Ramen" class="w-full h-28 object-cover">
                                <div class="p-3">
                                    <h4 class="font-bold text-white">Tonkotsu Ramen</h4>
                                    <p class="text-xs text-gray-400 mt-1">Cremige Br√ºhe, eigene Toppings.</p>
                                </div>
                            </article>
                            <article class="flex-shrink-0 w-56 snap-start bg-slate-800/60 rounded-xl border border-white/10 overflow-hidden">
                                <img src="https://placehold.co/400x300/1a202c/ffffff?text=Burrito" alt="Burrito Guacamole" class="w-full h-28 object-cover">
                                <div class="p-3">
                                    <h4 class="font-bold text-white">Burrito Guacamole</h4>
                                    <p class="text-xs text-gray-400 mt-1">Frisch gerollt, frei w√§hlbar.</p>
                                </div>
                            </article>
                            <article class="flex-shrink-0 w-56 snap-start bg-slate-800/60 rounded-xl border border-white/10 overflow-hidden">
                                <img src="https://placehold.co/400x300/1a202c/ffffff?text=Fries" alt="Fries Guac-Style" class="w-full h-28 object-cover">
                                <div class="p-3">
                                    <h4 class="font-bold text-white">Fries ‚ÄûGuac-Style‚Äú</h4>
                                    <p class="text-xs text-gray-400 mt-1">Knusprig mit Avocado-Kick.</p>
                                </div>
                            </article>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <!-- Info Section: Opening Hours & Instagram -->
        <section class="mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6">
            <div class="lg:col-span-2 p-5 bg-slate-800/40 border border-white/10 rounded-2xl">
                <div class="inline-block py-1 px-3 text-xs rounded-full bg-white/5 border border-white/10 mb-3">
                    üìç Innere Schneeberger Str. 17, 08056 Zwickau
                </div>
                <div id="hours" class="grid grid-cols-[110px_1fr] md:grid-cols-[130px_1fr] gap-x-4 gap-y-1.5 text-sm">
                    <!-- Opening hours will be injected here by JS -->
                </div>
            </div>
            <div class="p-5 bg-slate-800/40 border border-white/10 rounded-2xl">
                <div class="flex justify-between items-center">
                    <strong class="font-bold text-white">Folge uns auf</strong>
                    <a href="https://instagram.com/crunchclub_zwickau" target="_blank" rel="noopener" class="text-sm text-cyan-400 hover:underline">Instagram ‚Üí</a>
                </div>
                <hr class="border-white/10 my-3">
                <div class="grid grid-cols-3 gap-2">
                    <!-- Ersetze diese durch deine Instagram-Bilder -->
                    <a href="#" class="aspect-square rounded-lg overflow-hidden bg-slate-700"><img src="https://placehold.co/200x200/1a202c/ffffff?text=Post" alt="Instagram Post" class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"></a>
                    <a href="#" class="aspect-square rounded-lg overflow-hidden bg-slate-700"><img src="https://placehold.co/200x200/1a202c/ffffff?text=Food" alt="Instagram Post" class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"></a>
                    <a href="#" class="aspect-square rounded-lg overflow-hidden bg-slate-700"><img src="https://placehold.co/200x200/1a202c/ffffff?text=Love" alt="Instagram Post" class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"></a>
                </div>
            </div>
        </section>

        <footer class="mt-6 text-center text-xs text-gray-500">
            <p>Es werden nur anonyme technische Daten verarbeitet (Zeit, Token, anonyme Client-ID). Kein Tracking √ºber Websites hinweg.</p>
        </footer>

    </div>

    <!-- Toast Notification (for replacing alert()) -->
    <div id="toast" class="fixed bottom-5 right-5 translate-x-[200%] transition-transform duration-500 bg-gray-800 border border-gray-700 text-white px-6 py-3 rounded-lg shadow-lg">
        <p id="toastMessage"></p>
    </div>

<script>
document.addEventListener('DOMContentLoaded', () => {

    // ===== DOM Element Selectors
    const dom = {
        badge: document.getElementById('badge'),
        badgeIcon: document.getElementById('badgeIcon'),
        badgeText: document.getElementById('badgeText'),
        kv: {
            status: document.getElementById('kv_status'),
            venue: document.getElementById('kv_venue'),
            time: document.getElementById('kv_time'),
            cid: document.getElementById('kv_cid'),
        },
        tips: document.getElementById('tips'),
        hours: document.getElementById('hours'),
        retryBtn: document.getElementById('retry'),
        resetBtn: document.getElementById('reset'),
        toast: document.getElementById('toast'),
        toastMessage: document.getElementById('toastMessage'),
    };
    
    // ===== SVG Icons
    const ICONS = {
      success: `<svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor"><path d="M9 16.2l-3.5-3.5-1.4 1.4L9 19 20 8l-1.4-1.4z"/></svg>`,
      warning: `<svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor"><path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/></svg>`,
      error: `<svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor"><path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"/></svg>`,
      loading: `<svg class="w-5 h-5 animate-spin" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2v4m0 12v4M4.93 4.93l2.83 2.83m8.48 8.48l2.83 2.83M2 12h4m12 0h4m-2.83-7.07l-2.83 2.83M18.36 18.36l-2.83-2.83"/></svg>`
    };

    // ===== Basic Helpers
    const qs = new URLSearchParams(location.search);
    const getClientId = () => {
        try {
            let id = localStorage.getItem('cc_client_id');
            if (!id) {
                id = crypto.randomUUID();
                localStorage.setItem('cc_client_id', id);
            }
            return id;
        } catch (e) {
            console.error("LocalStorage is not available.", e);
            return '(kein Storage)';
        }
    };
    const resetClientId = () => {
        try {
            localStorage.removeItem('cc_client_id');
            return true;
        } catch (e) {
            console.error("LocalStorage is not available.", e);
            return false;
        }
    };
    const showToast = (message) => {
        dom.toastMessage.textContent = message;
        dom.toast.classList.remove('translate-x-[200%]');
        setTimeout(() => {
            dom.toast.classList.add('translate-x-[200%]');
        }, 3000);
    };

    // ===== Data & Configuration
    const HOURS = [
        { d: 'Montag', h: '11:00 ‚Äì 21:00' },
        { d: 'Dienstag', h: '11:00 ‚Äì 21:00' },
        { d: 'Mittwoch', h: '11:00 ‚Äì 21:00' },
        { d: 'Donnerstag', h: '11:00 ‚Äì 21:00' },
        { d: 'Freitag', h: '11:00 ‚Äì 21:30' },
        { d: 'Samstag', h: '11:00 ‚Äì 21:30' },
        { d: 'Sonntag', h: 'geschlossen' }
    ];

    const STATES = {
        success: { kv: 'Erfolgreich', badge: ['ok', '‚úì Registrierung erfolgreich'], icon: ICONS.success, tip: `<ul><li class="pl-5 relative before:content-['‚Ä¢'] before:absolute before:left-0">Best√§tigung bei Bedarf am Tresen zeigen.</li><li class="pl-5 relative before:content-['‚Ä¢'] before:absolute before:left-0">F√ºr Loyalty-Punkte bei jedem Besuch scannen.</li></ul>` },
        dupe: { kv: 'Bereits registriert', badge: ['err', '‚ö†Ô∏è Heute bereits registriert'], icon: ICONS.error, tip: `<b>Hinweis:</b> Pro Ger√§t & Token nur 1√ó pro Tag.<br>Sp√§ter erneut scannen.` },
        rate: { kv: 'Zu viele Scans', badge: ['err', '‚ö†Ô∏è Zu viele Scans'], icon: ICONS.error, tip: `Bitte 1‚Äì2 Minuten warten und erneut scannen.` },
        invalid: { kv: 'Ung√ºltiger QR', badge: ['err', '‚ö†Ô∏è Ung√ºltiger QR'], icon: ICONS.error, tip: `Veraltet oder Parameter fehlen. Bitte aktuellen QR am Tresen scannen.` },
        expired: { kv: 'QR abgelaufen', badge: ['err', '‚ö†Ô∏è QR abgelaufen'], icon: ICONS.error, tip: `Bitte aktuellen QR verwenden (Poster am Tresen).` },
        inactive: { kv: 'QR deaktiviert', badge: ['err', '‚ö†Ô∏è QR deaktiviert'], icon: ICONS.error, tip: `Bitte neuen QR am Tresen anfordern.` },
        venue: { kv: 'Falscher Standort', badge: ['err', '‚ö†Ô∏è Standort stimmt nicht'], icon: ICONS.error, tip: `Dieser QR gilt nicht f√ºr diesen Standort.` },
        param: { kv: 'Parameter fehlen', badge: ['err', '‚ö†Ô∏è Parameter fehlen'], icon: ICONS.error, tip: `Bitte QR erneut scannen.` },
        server: { kv: 'Server-Fehler', badge: ['err', '‚ö†Ô∏è Vor√ºbergehender Fehler'], icon: ICONS.error, tip: `Bitte in wenigen Minuten erneut versuchen.` },
        unknown: { kv: 'Unbekannt', badge: ['warn', '‚ÑπÔ∏è Unklarer Status'], icon: ICONS.warning, tip: `Diese Seite wurde ohne g√ºltigen Status aufgerufen. Bitte QR erneut scannen.` }
    };
    
    // ===== UI Update Functions
    const setBadge = (type, text, iconHtml) => {
        const badgeClasses = {
            ok: 'bg-green-500/10 border-green-500 text-green-400',
            warn: 'bg-amber-500/10 border-amber-500 text-amber-400',
            err: 'bg-red-500/10 border-red-500 text-red-400',
            loading: 'bg-gray-500/10 border-gray-500 text-gray-400'
        };
        dom.badge.className = `inline-flex items-center gap-3 py-2 px-4 rounded-full border font-bold transition-all duration-300 ${badgeClasses[type] || badgeClasses.loading}`;
        dom.badgeText.textContent = text;
        dom.badgeIcon.innerHTML = iconHtml;

        if (type === 'ok') {
            const checkContainer = document.createElement('div');
            checkContainer.className = 'w-5 h-5 grid place-items-center rounded-full bg-green-500/20 check-pop';
            checkContainer.innerHTML = ICONS.success;
            dom.badgeIcon.innerHTML = '';
            dom.badgeIcon.appendChild(checkContainer);
        }
    };
    
    const renderOpeningHours = () => {
        const dayMap = [6, 0, 1, 2, 3, 4, 5]; // new Date().getDay() -> So=0, Mo=1...
        const todayIndex = dayMap[new Date().getDay()];
        const html = HOURS.map((entry, i) => {
            const isToday = i === todayIndex;
            return `
                <div class="${isToday ? 'text-cyan-400 font-bold' : 'text-gray-400'}">${entry.d}</div>
                <div class="${isToday ? 'text-white font-bold' : ''}">${entry.h}</div>
            `;
        }).join('');
        dom.hours.innerHTML = html;
    };
    
    // ===== Main Logic
    const initialize = () => {
        // 1. Render static parts
        renderOpeningHours();
        dom.kv.time.textContent = new Date().toLocaleString('de-DE');
        dom.kv.venue.textContent = qs.get('ven') || 'CrunchClub Zwickau';
        dom.kv.cid.textContent = getClientId();
        
        // 2. Determine state from URL
        const registered = qs.get('registered');
        const reason = (qs.get('reason') || '').toLowerCase();
        
        let view;
        if (registered === '1') {
            view = STATES.success;
        } else if (registered === '0') {
            view = STATES[reason] || STATES.unknown;
        } else {
            view = STATES.unknown;
        }
        
        // 3. Update UI based on state
        dom.kv.status.textContent = view.kv;
        setBadge(view.badge[0], view.badge[1], view.icon);
        dom.tips.innerHTML = view.tip;

        // 4. Set up event listeners
        dom.retryBtn.onclick = () => {
            if (document.referrer && /script\.google\.com/.test(document.referrer)) {
                location.reload();
            } else {
                history.length > 1 ? history.back() : (window.location.href = '/');
            }
        };
        dom.resetBtn.onclick = () => {
            if(resetClientId()) {
                showToast('Client-ID zur√ºckgesetzt. Bitte erneut scannen.');
                setTimeout(() => location.reload(), 1000);
            } else {
                showToast('Speicherzugriff nicht m√∂glich.');
            }
        };
    };

    // Run initialization
    initialize();
});
</script>
</body>
</html>

